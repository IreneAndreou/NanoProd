skim:
  input_tree: Events
  other_trees:
    - LuminosityBlocks
    - Runs
  sel_ref: selection
  column_filters:
    - drop Jet_hfsigmaEtaEta
    - drop Jet_hfsigmaPhiPhi
    - drop Jet_hfcentralEtaStripSize
    - drop Jet_hfadjacentEtaStripsSize
    - drop Jet_chEmEF
    - drop Jet_chHEF
    - drop Jet_hfEmEF
    - drop Jet_hfHEF
    - drop Jet_muEF
    - drop Jet_neEmEF
    - drop Jet_neHEF
    - drop Jet_muonSubtrFactor
    - drop Electron_scEtOverPt
    - drop Electron_jetRelIso
    - drop Electron_r9
    - drop Electron_jetPtRelv2
    - drop Electron_vidNestedWPBitmap
    - drop Electron_vidNestedWPBitmapHEEP
    - drop Electron_dr03EcalRecHitSumEt
    - drop Electron_dr03HcalDepth1TowerSumEt
    - drop Electron_jetNDauCharged
    - drop Electron_dr03TkSumPt
    - drop Electron_dr03TkSumPtHEEP
    - drop Electron_tightCharge
    - drop Electron_cutBased_HEEP
    - drop Muon_segmentComp
    - drop Muon_jetRelIso
    - drop Muon_jetPtRelv2
    - drop Muon_nStations
    - drop Muon_jetNDauCharged
    - drop Tau_idDecayModeOldDMs
    - drop Tau_idAntiEleDeadECal
    - drop Tau_photonsOutsideSignalCone
    - drop Tau_puCorr
    - drop Tau_chargedIso
    - drop Tau_neutralIso
    - drop boostedTau_chargedIso
    - drop boostedTau_neutralIso
    - drop boostedTau_photonsOutsideSignalCone
    - drop boostedTau_puCorr
    - drop boostedTau_rawIsodR03
    - drop boostedTau_idAntiEle2018
    - drop boostedTau_rawAntiEle2018
    - drop boostedTau_rawAntiEleCat2018
    - drop boostedTau_idMVAnewDM2017v2
    - drop boostedTau_idMVAoldDM2017v2
    - drop boostedTau_idMVAoldDMdR032017v2
    - drop boostedTau_rawMVAnewDM2017v2
    - drop boostedTau_rawMVAoldDM2017v2
    - drop boostedTau_rawMVAoldDMdR032017v2
    - drop ^(n|)OtherPV(_.*|)$
    - drop ^(n|)Photon(_.*|)$
    - drop ^(n|)LowPtElectron(_.*|)$
    - drop ^(n|)SoftActivityJet(.*|)$
    - drop ^(n|)IsoTrack(_.*|)$
    - drop ^(n|)GenIsolatedPhoton(_.*|)$
    - drop ^(n|)GenProton(_.*|)$
    - drop ^(n|)Proton(_.*|)$
    - drop ^(n|)PPSLocalTrack(_.*|)$
    - drop ^L1_.*$

skim_failed:
  input_tree: Events
  output_tree: EventsNotSelected
  sel_ref: selection
  invert_sel: true
  column_filters:
    - drop ^.*$
    - keep run
    - keep genWeight
    - keep ^Pileup_(nPU|nTrueInt)$
    - keep ^(n|)LHE.*$
    - keep ^(n|)GenPart(_.*|)$
    - drop ^GenPart_v[xyz]$
    - keep ^HTXS_.*$


selection: "
  auto ele_base_sel = Electron_pt > 5 && (abs(Electron_eta) < 2.5 || abs(Electron_eta+Electron_deltaEtaSC) < 2.5);
  auto ele_mvaIso_sel = Electron_mvaIso_WP90;
  auto ele_mvaNoIso_sel = Electron_mvaNoIso_WP90;
  auto ele_pfIso_sel = Electron_pfRelIso03_all < 0.5 || Electron_miniPFRelIso_all < 0.5;
  auto ele_sel = ele_base_sel && (ele_mvaIso_sel || (ele_mvaNoIso_sel && ele_pfIso_sel));

  auto muon_base_sel = Muon_pt > 5 && abs(Muon_eta) < 2.4;
  auto muon_id_sel = Muon_tightId || Muon_mediumId || Muon_mediumPromptId || Muon_highPtId || Muon_mvaMuID_WP >= 1 || Muon_miniIsoId >= 2;
  auto muon_iso_sel = Muon_pfRelIso04_all < 0.5 || Muon_pfRelIso03_all < 0.5 || Muon_tkRelIso < 0.5 || Muon_miniPFRelIso_all < 0.5;
  auto muon_sel = muon_base_sel && muon_id_sel && muon_iso_sel;

  auto tau_base_sel = Tau_pt > 18 && abs(Tau_eta) < 2.5;
  auto tau_deepTau_v2p1_sel = Tau_rawDeepTau2017v2p1VSmu > 0.05 && Tau_idDeepTau2017v2p1VSjet > 0 && Tau_idDeepTau2017v2p1VSe > 0;
  auto tau_deepTau_v2p5_sel = Tau_rawDeepTau2018v2p5VSmu > 0.05 && Tau_idDeepTau2018v2p5VSjet > 0 && Tau_idDeepTau2018v2p5VSe > 0;
  auto tau_pnet_sel = Tau_rawPNetVSjet > 0.05 && Tau_rawPNetVSe > 0.05 && Tau_rawPNetVSmu > 0.05;
  auto tau_upart_sel = Tau_rawUParTVSjet > 0.05 && Tau_rawUParTVSe > 0.05 && Tau_rawUParTVSmu > 0.05;
  auto tau_sel = tau_base_sel && (tau_deepTau_v2p1_sel || tau_deepTau_v2p5_sel || tau_pnet_sel || tau_upart_sel);

  int n_electrons = Electron_pt[ele_sel].size();
  int n_muons = Muon_pt[muon_sel].size();
  int n_taus = Tau_pt[tau_sel].size();
  int n_met = std::max({PFMET_pt, DeepMETResolutionTune_pt, DeepMETResponseTune_pt, PuppiMET_pt}) > 100;
  if(n_electrons + n_muons + n_taus + n_met >= 2) return true;

  auto fatJet_sel = FatJet_particleNet_XteVsQCD > 0.05 || FatJet_particleNet_XtmVsQCD > 0.05 || FatJet_particleNet_XttVsQCD > 0.05;
  int n_fatJet = FatJet_pt[fatJet_sel].size();
  if(n_fatJet >= 1 || nFatJet >= 2) return true;

  auto boostedtau_base_sel = boostedTau_pt > 18 && abs(boostedTau_eta) < 2.5;
  auto boostedtau_deepTau_sel = boostedTau_rawBoostedDeepTauRunIIv2p0VSjet > 0.72 && boostedTau_rawBoostedDeepTauRunIIv2p0VSe > 0.1 && boostedTau_rawBoostedDeepTauRunIIv2p0VSmu > 0.003;
  auto boostedtau_sel = boostedtau_base_sel && boostedtau_deepTau_sel;
  int n_boostedtaus = boostedTau_pt[boostedtau_sel].size();
  int n_boosted_pairs = 0;
  float maxR2 = 0.8*0.8;
  float minR2 = 0.01*0.01;
  auto has_boosted_pair = [&](const ROOT::RVecF& eta1, const ROOT::RVecF& phi1, const ROOT::RVecF& eta2, const ROOT::RVecF& phi2,
                              bool is_same) {
    const size_t i_max = is_same ? eta1.size() - 1 : eta1.size();
    for(size_t i = 0; i < i_max; ++i) {
      size_t j = is_same ? i + 1 : 0;
      for(; j < eta2.size(); ++j) {
        float deta = eta1[i]-eta2[j];
        float dphi = TVector2::Phi_mpi_pi(phi1[i]-phi2[j]);
        float dr2 = deta*deta + dphi*dphi;
        if(dr2 > minR2 && dr2 < maxR2)
          return true;
      }
    }
    return false;
  };

  if(n_boostedtaus >= 2 && has_boosted_pair(boostedTau_eta[boostedtau_sel], boostedTau_phi[boostedtau_sel],
                                            boostedTau_eta[boostedtau_sel], boostedTau_phi[boostedtau_sel], true))
    return true;
  if(n_boostedtaus >= 1 && n_muons >=1 && has_boosted_pair(boostedTau_eta[boostedtau_sel], boostedTau_phi[boostedtau_sel],
                                                           Muon_eta[muon_sel], Muon_phi[muon_sel], false))
    return true;
  if(n_boostedtaus >= 1 && n_electrons >=1 && has_boosted_pair(boostedTau_eta[boostedtau_sel], boostedTau_phi[boostedtau_sel],
                                                               Electron_eta[ele_sel], Electron_phi[ele_sel], false))
    return true;

  if(n_electrons + n_muons < 1) return false;
  float lep_pt = n_electrons > 0 ? Electron_pt[ele_sel][0] : Muon_pt[muon_sel][0];
  float HT = Sum(Jet_pt);
  return nJet >= 4 && (lep_pt > 20 || HT > 200);
  "
